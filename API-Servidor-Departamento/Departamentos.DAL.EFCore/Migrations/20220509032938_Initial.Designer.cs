// <auto-generated />
using System;
using Departamentos.DAL.EFCore.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Departamentos.DAL.EFCore.Migrations
{
    [DbContext(typeof(DepartamentoContext))]
    [Migration("20220509032938_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("Departamentos_Core.Entidades.Circuito", b =>
                {
                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Numero");

                    b.ToTable("Circuitos");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.DispositivoHabilitado", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Numero_Circuito")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("Numero_Circuito");

                    b.ToTable("DispositivosHabilitados");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.Opcion", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Nombre");

                    b.ToTable("Opciones");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.Persona", b =>
                {
                    b.Property<string>("CI")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<bool>("VotoRealizado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("CI");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre_Opcion")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Numero_Circuito")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nombre_Opcion");

                    b.HasIndex("Numero_Circuito");

                    b.ToTable("Votos");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.DispositivoHabilitado", b =>
                {
                    b.HasOne("Departamentos_Core.Entidades.Circuito", "Circuito")
                        .WithMany("DispositivosHabilitados")
                        .HasForeignKey("Numero_Circuito")
                        .IsRequired();

                    b.Navigation("Circuito");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.Voto", b =>
                {
                    b.HasOne("Departamentos_Core.Entidades.Opcion", "Opcion")
                        .WithMany("Votos")
                        .HasForeignKey("Nombre_Opcion");

                    b.HasOne("Departamentos_Core.Entidades.Circuito", "Circuito")
                        .WithMany("Votos")
                        .HasForeignKey("Numero_Circuito")
                        .IsRequired();

                    b.Navigation("Circuito");

                    b.Navigation("Opcion");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.Circuito", b =>
                {
                    b.Navigation("DispositivosHabilitados");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("Departamentos_Core.Entidades.Opcion", b =>
                {
                    b.Navigation("Votos");
                });
#pragma warning restore 612, 618
        }
    }
}
